{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__DidNotSendMinimumUSD",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__WithdrawError",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8bc78a36b2dca8e451e28eb0cfa7257df456a307e9fc4c73f89bac3df87cab46",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "863405",
    "logsBloom": "0x
    "blockHash": "0x5dbf1266729302eefebfec921e8fb3080df1adaeed4a87f56d6bbe1f85b79c83",
    "transactionHash": "0x8bc78a36b2dca8e451e28eb0cfa7257df456a307e9fc4c73f89bac3df87cab46",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "863405",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "419217fea6959a2a0132b808a134f759",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__DidNotSendMinimumUSD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__WithdrawError\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Luis Gerardo\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.8;\\n\\n// Imports\\nimport './PriceConverter.sol';\\n\\n// Error Codes\\nerror FundMe__NotOwner();\\nerror FundMe__DidNotSendMinimumUSD();\\nerror FundMe__WithdrawError();\\n\\n// Interfaces, Libraries, Contracts\\n/**\\n * @title A contract for crowd funding\\n * @author Luis Gerardo\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n  // Type declarations\\n  using PriceConverter for uint256;\\n\\n  // State Variables\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 1e18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  // Events, Modifiers\\n  modifier onlyOwner() {\\n    if (msg.sender != i_owner) {\\n      revert FundMe__NotOwner();\\n    }\\n    _;\\n  }\\n\\n  //constructor, receive, fallback Functions\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  //Other Functions \\n  /**\\n   * @notice This function funds this contract\\n   * @dev This implements price feeds as our library\\n   */\\n  function fund() public payable {\\n\\n    if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n      revert FundMe__DidNotSendMinimumUSD();\\n    }\\n\\n    s_funders.push(msg.sender);\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n\\n    s_funders = new address[](0);\\n\\n    (bool success, ) = i_owner.call{value: address(this).balance}('');\\n    if (!success) {\\n      revert FundMe__WithdrawError();\\n    }\\n  }\\n\\n\\n  //View, Pure Functions\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunders(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(address funder)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x5ed97b80408b518ed376e9eec07f44103bf39c7173e84900f00c2aeb66f754f1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    return uint256(price * 1e10);\\n  }\\n\\n  function getVersion(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    return priceFeed.version();\\n  }\\n\\n  function getConversionRate(\\n    uint256 _ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1e18;\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xc4acd8f0924521af4b183f38d9e4294d1994e72c2902ca975c0b84e0196636ed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610fa8380380610fa883398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e3c61016c6000396000818161035f0152818161055501526106290152610e3c6000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a59214610111578063893d20e81461013c5780639e87a5cd14610167578063b60d42881461019257610083565b80630343fb251461008d5780633a7b6c74146100ca5780633ccfd60b1461010757610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100b460048036038101906100af919061085d565b6102cd565b6040516100c191906108a3565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec91906108ea565b610315565b6040516100fe9190610926565b60405180910390f35b61010f61035d565b005b34801561011d57600080fd5b50610126610618565b60405161013391906108a3565b60405180910390f35b34801561014857600080fd5b50610151610625565b60405161015e9190610926565b60405180910390f35b34801561017357600080fd5b5061017c61064d565b60405161018991906109a0565b60405180910390f35b61019a61019c565b005b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067790919063ffffffff16565b1015610213576040517fb12e472100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c491906109ea565b92505081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061032b5761032a610a40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561046657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161041c575b5050505050905060005b81518110156104f057600082828151811061048e5761048d610a40565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e890610a6f565b915050610470565b50600067ffffffffffffffff81111561050c5761050b610ab8565b5b60405190808252806020026020018201604052801561053a5781602001602082028036833780820191505090505b5060019080519060200190610550929190610753565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161059790610b18565b60006040518083038185875af1925050503d80600081146105d4576040519150601f19603f3d011682016040523d82523d6000602084013e6105d9565b606091505b5050905080610614576040517fdde7200a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610683836106b3565b90506000670de0b6b3a7640000858361069c9190610b2d565b6106a69190610bb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106fc57600080fd5b505afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190610c74565b5050509150506402540be4008161074b9190610cef565b915050919050565b8280548282559060005260206000209081019282156107cc579160200282015b828111156107cb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610773565b5b5090506107d991906107dd565b5090565b5b808211156107f65760008160009055506001016107de565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061082a826107ff565b9050919050565b61083a8161081f565b811461084557600080fd5b50565b60008135905061085781610831565b92915050565b600060208284031215610873576108726107fa565b5b600061088184828501610848565b91505092915050565b6000819050919050565b61089d8161088a565b82525050565b60006020820190506108b86000830184610894565b92915050565b6108c78161088a565b81146108d257600080fd5b50565b6000813590506108e4816108be565b92915050565b600060208284031215610900576108ff6107fa565b5b600061090e848285016108d5565b91505092915050565b6109208161081f565b82525050565b600060208201905061093b6000830184610917565b92915050565b6000819050919050565b600061096661096161095c846107ff565b610941565b6107ff565b9050919050565b60006109788261094b565b9050919050565b600061098a8261096d565b9050919050565b61099a8161097f565b82525050565b60006020820190506109b56000830184610991565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f58261088a565b9150610a008361088a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3557610a346109bb565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a7a8261088a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aad57610aac6109bb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b02600083610ae7565b9150610b0d82610af2565b600082019050919050565b6000610b2382610af5565b9150819050919050565b6000610b388261088a565b9150610b438361088a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7c57610b7b6109bb565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc18261088a565b9150610bcc8361088a565b925082610bdc57610bdb610b87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0681610be7565b8114610c1157600080fd5b50565b600081519050610c2381610bfd565b92915050565b6000819050919050565b610c3c81610c29565b8114610c4757600080fd5b50565b600081519050610c5981610c33565b92915050565b600081519050610c6e816108be565b92915050565b600080600080600060a08688031215610c9057610c8f6107fa565b5b6000610c9e88828901610c14565b9550506020610caf88828901610c4a565b9450506040610cc088828901610c5f565b9350506060610cd188828901610c5f565b9250506080610ce288828901610c14565b9150509295509295909350565b6000610cfa82610c29565b9150610d0583610c29565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4457610d436109bb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d8157610d806109bb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dbe57610dbd6109bb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dfb57610dfa6109bb565b5b82820290509291505056fea2646970667358221220bf8b51836135647781a628c370f41847226c174150d1469f50044819de9e2ac564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a59214610111578063893d20e81461013c5780639e87a5cd14610167578063b60d42881461019257610083565b80630343fb251461008d5780633a7b6c74146100ca5780633ccfd60b1461010757610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100b460048036038101906100af919061085d565b6102cd565b6040516100c191906108a3565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec91906108ea565b610315565b6040516100fe9190610926565b60405180910390f35b61010f61035d565b005b34801561011d57600080fd5b50610126610618565b60405161013391906108a3565b60405180910390f35b34801561014857600080fd5b50610151610625565b60405161015e9190610926565b60405180910390f35b34801561017357600080fd5b5061017c61064d565b60405161018991906109a0565b60405180910390f35b61019a61019c565b005b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067790919063ffffffff16565b1015610213576040517fb12e472100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c491906109ea565b92505081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061032b5761032a610a40565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561046657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161041c575b5050505050905060005b81518110156104f057600082828151811061048e5761048d610a40565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e890610a6f565b915050610470565b50600067ffffffffffffffff81111561050c5761050b610ab8565b5b60405190808252806020026020018201604052801561053a5781602001602082028036833780820191505090505b5060019080519060200190610550929190610753565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161059790610b18565b60006040518083038185875af1925050503d80600081146105d4576040519150601f19603f3d011682016040523d82523d6000602084013e6105d9565b606091505b5050905080610614576040517fdde7200a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610683836106b3565b90506000670de0b6b3a7640000858361069c9190610b2d565b6106a69190610bb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106fc57600080fd5b505afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190610c74565b5050509150506402540be4008161074b9190610cef565b915050919050565b8280548282559060005260206000209081019282156107cc579160200282015b828111156107cb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610773565b5b5090506107d991906107dd565b5090565b5b808211156107f65760008160009055506001016107de565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061082a826107ff565b9050919050565b61083a8161081f565b811461084557600080fd5b50565b60008135905061085781610831565b92915050565b600060208284031215610873576108726107fa565b5b600061088184828501610848565b91505092915050565b6000819050919050565b61089d8161088a565b82525050565b60006020820190506108b86000830184610894565b92915050565b6108c78161088a565b81146108d257600080fd5b50565b6000813590506108e4816108be565b92915050565b600060208284031215610900576108ff6107fa565b5b600061090e848285016108d5565b91505092915050565b6109208161081f565b82525050565b600060208201905061093b6000830184610917565b92915050565b6000819050919050565b600061096661096161095c846107ff565b610941565b6107ff565b9050919050565b60006109788261094b565b9050919050565b600061098a8261096d565b9050919050565b61099a8161097f565b82525050565b60006020820190506109b56000830184610991565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f58261088a565b9150610a008361088a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3557610a346109bb565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a7a8261088a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aad57610aac6109bb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b02600083610ae7565b9150610b0d82610af2565b600082019050919050565b6000610b2382610af5565b9150819050919050565b6000610b388261088a565b9150610b438361088a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b7c57610b7b6109bb565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc18261088a565b9150610bcc8361088a565b925082610bdc57610bdb610b87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0681610be7565b8114610c1157600080fd5b50565b600081519050610c2381610bfd565b92915050565b6000819050919050565b610c3c81610c29565b8114610c4757600080fd5b50565b600081519050610c5981610c33565b92915050565b600081519050610c6e816108be565b92915050565b600080600080600060a08688031215610c9057610c8f6107fa565b5b6000610c9e88828901610c14565b9550506020610caf88828901610c4a565b9450506040610cc088828901610c5f565b9350506060610cd188828901610c5f565b9250506080610ce288828901610c14565b9150509295509295909350565b6000610cfa82610c29565b9150610d0583610c29565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4457610d436109bb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d8157610d806109bb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dbe57610dbd6109bb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dfb57610dfa6109bb565b5b82820290509291505056fea2646970667358221220bf8b51836135647781a628c370f41847226c174150d1469f50044819de9e2ac564736f6c63430008080033",
  "devdoc": {
    "author": "Luis Gerardo",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}